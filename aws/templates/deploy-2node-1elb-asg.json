{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template 2Node, 1 ELB and AutoScaling Group",
    "Parameters": {
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t1.micro",
            "AllowedValues": [
                "t1.micro",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "cc1.4xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type" : "AWS::EC2::KeyPair::KeyName",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "Default": "web-servers",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "dedicatedVPC": {
         "Description": "Name of VPCID",
            "Type" : "AWS::EC2::VPC::Id",
            "Default": "vpc-0099ae89565314c44",
            "ConstraintDescription" : "Must be a valid VPC."
        },
        "privSubnet": {
        "Description": "Name of Private Subnet",
            "Type" : "AWS::EC2::Subnet::Id",
            "Default": "subnet-0e468a06aab6e7fc3",
            "MinLength" : "1",
            "MaxLength" : "255",
            "ConstraintDescription" : "Must be a valid Private Subnet."
        },
        "privSubnet2": {
        "Description": "Name of Private Subnet",
            "Type" : "AWS::EC2::Subnet::Id",
            "Default": "subnet-02b0c402c767207d1",
            "MinLength" : "1",
            "MaxLength" : "255",
            "ConstraintDescription" : "Must be a valid Private Subnet."
        },
        "pubSubnet": {
        "Description": "Name of Public Subnet",
            "Type" : "String",
            "MinLength" : "1",
            "MaxLength" : "255",
            "Default": "subnet-0d3b3098fc6d95cee",
            "ConstraintDescription" : "Must be a valid Public Subnet."
        },
        "pubSubnet2": {
        "Description": "Name of Public Subnet",
            "Type" : "String",
            "MinLength" : "1",
            "MaxLength" : "255",
            "Default": "subnet-0e8272e1c640b3cd4",
            "ConstraintDescription" : "Must be a valid Public Subnet."
        },
        "EnvShort": {
            "Description": "Name of environment",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "AMI": {
            "Description": "Name of Image",
            "Type": "String",
            "Default": "ami-082fd33501c8a2a81",
            "ConstraintDescription": "can contain only ASCII characters."
        }
    },
    "Resources": {
        "WebServerGroup" : {
                        "Type" : "AWS::AutoScaling::AutoScalingGroup",
                        "Properties" : {
                                "AvailabilityZones" : ["us-east-1a", "us-east-1b"],
                                "LaunchConfigurationName" : { "Ref" : "WebLaunchConfig" },
                                "MinSize" : "2",
                                "MaxSize" : "3",
                                "DesiredCapacity" : "2",
                                "HealthCheckType": "EC2",
                                "HealthCheckGracePeriod": "600",
                                "VPCZoneIdentifier" : [ { "Ref" : "privSubnet" }, { "Ref" : "privSubnet2" } ],
                                "LoadBalancerNames" : [ { "Ref" : "PublicElb" }],
                                "Tags" : [
                                        { "Key" : "Name", "Value" : { "Fn::Join" : ["", ["AutoScalingGroup-", { "Ref" : "EnvShort" }, "-Deployment"]]}, "PropagateAtLaunch" : "true" }
                                ]
                        },
                        "UpdatePolicy" : {
                                "AutoScalingScheduledAction" : {
                                        "IgnoreUnmodifiedGroupSizeProperties" : "true"
                                },
                                "AutoScalingRollingUpdate" : {
                                        "MinInstancesInService" : "1",
                                        "MaxBatchSize" : "1",
                                        "PauseTime" : "PT5M",
                                        "WaitOnResourceSignals" : "false"
                                }
                        }
                },
        "WebLaunchConfig" : {
                        "Type" : "AWS::AutoScaling::LaunchConfiguration",
                        "Properties" : {
                                "ImageId" : {"Ref" : "AMI"},
                                "InstanceType" : {"Ref" : "InstanceType"},
                                "KeyName" : { "Ref" : "KeyName" },
                                "SecurityGroups" : [{ "Ref" : "WebSG" }],
                                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "sudo apt-get install -y apache2\n",
                                "sudo systemctl enable apache2\n",
                                "sudo ufw disable\n",
                                "sudo iptables -F\n",
                                "sudo service iptables stop\n",
                                "sudo systemctl start apache2\n",
                                "sudo apt-get install -y curl wget\n",
                                "sudo > /var/www/html/index.html\n",
                                "sudo echo 'Howdy Onica Folks <br> Zeke' >> /var/www/html/index.html\n",
                                "sudo apt-get update\n",
                                "\n"

                                        ]]}
                                },
                                "BlockDeviceMappings" : [
                                  {
                                        "DeviceName" : "/dev/sda1",
                                        "Ebs" : {
                                                "VolumeSize" : "65",
                                                "VolumeType" : "gp2"
                                        }
                                  }
                                ]
                        }
                },
        "ServerScaleUpPolicy" : {
                        "Type" : "AWS::AutoScaling::ScalingPolicy",
                        "Properties" : {
                                "AdjustmentType" : "ChangeInCapacity",
                                "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
                                "Cooldown" : "1200",
                                "ScalingAdjustment" : "1"
                        }
                },
        "ServerScaleDownPolicy" : {
                        "Type" : "AWS::AutoScaling::ScalingPolicy",
                        "Properties" : {
                                "AdjustmentType" : "ChangeInCapacity",
                                "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
                                "Cooldown" : "1200",
                                "ScalingAdjustment" : "-1"
                        }
                },
        "CPUAlarmHigh" : {
                        "Type" : "AWS::CloudWatch::Alarm",
                        "Properties" : {
                                "AlarmDescription" : "Scale-up if CPU > 90% for 10 minutes",
                                "MetricName" : "CPUUtilization",
                                "Namespace" : "AWS/EC2",
                                "Statistic" : "Average",
                                "Period" : "1200",
                                "EvaluationPeriods" : "2",
                                "Threshold" : "90",
                                "AlarmActions" : [ { "Ref" : "ServerScaleUpPolicy" } ],
                                "Dimensions" : [
                                {
                                        "Name" : "AutoScalingGroupName",
                                        "Value" : { "Ref" : "WebServerGroup" }
                                }],
                                "ComparisonOperator" : "GreaterThanThreshold"
                        }
                },
        "CPUAlarmLow" : {
                        "Type" : "AWS::CloudWatch::Alarm",
                        "Properties" : {
                                "AlarmDescription" : "Scale-down if CPU < 50% for 10 minutes",
                                "MetricName" : "CPUUtilization",
                                "Namespace" : "AWS/EC2",
                                "Statistic" : "Average",
                                "Period" : "1200",
                                "EvaluationPeriods" : "2",
                                "Threshold" : "50",
                                "AlarmActions" : [ { "Ref" : "ServerScaleDownPolicy" } ],
                                "Dimensions" : [
                                {
                                        "Name" : "AutoScalingGroupName",
                                        "Value" : { "Ref" : "WebServerGroup" }
                                }],
                                "ComparisonOperator" : "LessThanThreshold"
                        	}
               	},
        "PublicElb": {
                        "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
                        "Properties": {
                                "LoadBalancerName" : { "Fn::Join" : ["", ["public-elb-", { "Ref" : "EnvShort" }]]},
								"SecurityGroups" : [ { "Ref" : "PubElbSG"} ],
                                "AvailabilityZones" : { "Fn::GetAZs" : " " },
                                "Scheme": "internet-facing",
                                "CrossZone" : "true",
                                "Subnets" : [ { "Ref" : "pubSubnet" }, { "Ref" : "pubSubnet2" } ],
                                "Listeners": [ {
                                        "LoadBalancerPort": "80",
                                        "InstancePort": "80",
                                        "Protocol": "HTTP"
                                        }
                                ],
                                "HealthCheck": {
                                        "Target": "TCP:80",
                                        "HealthyThreshold": "2",
                                        "UnhealthyThreshold": "2",
                                        "Interval": "30",
                                        "Timeout": "5"
                                },
                                "ConnectionDrainingPolicy": {
                                        "Enabled": true,
                                        "Timeout": 60
                                },
                                "Tags": [
                                        { "Key" : "Name", "Value" : { "Fn::Join" : ["", ["public-", { "Ref" : "EnvShort" }, "ELB"]]} }
                                ]
                        }
                },
        "PubElbSG" : {
                        "Type" : "AWS::EC2::SecurityGroup",
                        "Properties" : {
                                "GroupDescription" : "Public ELB SG",
                                "VpcId" : { "Ref" : "dedicatedVPC" },
                                "SecurityGroupIngress" : [
                                {
                                        "IpProtocol" : "tcp",
                                        "FromPort" : "80",
                                        "ToPort" : "80",
                                        "CidrIp" : "0.0.0.0/0"
                                }
                                ],
                                "Tags" : [
                                        { "Key" : "Name", "Value" : "onica-test-public-elbSG" }
                                ]
                        }
                        },
        "WebSG" : {
                        "Type" : "AWS::EC2::SecurityGroup",
                        "Properties" : {
                                "GroupDescription" : "Web SG",
                                "VpcId" : { "Ref" : "dedicatedVPC" },
                                "SecurityGroupIngress" : [
                                {
                                        "IpProtocol" : "tcp",
                                        "FromPort" : "80",
                                        "ToPort" : "80",
                                        "CidrIp" : "10.0.0.0/16"
                                },
                                {
                                        "IpProtocol" : "tcp",
                                        "FromPort" : "22",
                                        "ToPort" : "22",
                                        "CidrIp" : "10.0.0.0/16"
                                },
                                {
                                        "IpProtocol" : "icmp",
                                        "FromPort" : "-1",
                                        "ToPort" : "-1",
                                        "CidrIp" : "10.0.0.0/16"
                                }
                                ],
                                "Tags" : [
                                        { "Key" : "Name", "Value" : "instance-webSG" }
                                ]
                        }
                }
}
}